// Code generated by "stringer -type=EFeatureLevel"; DO NOT EDIT.

package egmanifest

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EFeatureLevelOriginal-0]
	_ = x[EFeatureLevelCustomFields-1]
	_ = x[EFeatureLevelStartStoringVersion-2]
	_ = x[EFeatureLevelDataFileRenames-3]
	_ = x[EFeatureLevelStoresIfChunkOrFileData-4]
	_ = x[EFeatureLevelStoresDataGroupNumbers-5]
	_ = x[EFeatureLevelChunkCompressionSupport-6]
	_ = x[EFeatureLevelStoresPrerequisitesInfo-7]
	_ = x[EFeatureLevelStoresChunkFileSizes-8]
	_ = x[EFeatureLevelStoredAsCompressedUClass-9]
	_ = x[EFeatureLevelUNUSED_0-10]
	_ = x[EFeatureLevelUNUSED_1-11]
	_ = x[EFeatureLevelStoresChunkDataShaHashes-12]
	_ = x[EFeatureLevelStoresPrerequisiteIds-13]
	_ = x[EFeatureLevelStoredAsBinaryData-14]
	_ = x[EFeatureLevelVariableSizeChunksWithoutWindowSizeChunkInfo-15]
	_ = x[EFeatureLevelVariableSizeChunks-16]
	_ = x[EFeatureLevelStoresUniqueBuildId-17]
	_ = x[EFeatureLevelLatestPlusOne-18]
}

const _EFeatureLevel_name = "EFeatureLevelOriginalEFeatureLevelCustomFieldsEFeatureLevelStartStoringVersionEFeatureLevelDataFileRenamesEFeatureLevelStoresIfChunkOrFileDataEFeatureLevelStoresDataGroupNumbersEFeatureLevelChunkCompressionSupportEFeatureLevelStoresPrerequisitesInfoEFeatureLevelStoresChunkFileSizesEFeatureLevelStoredAsCompressedUClassEFeatureLevelUNUSED_0EFeatureLevelUNUSED_1EFeatureLevelStoresChunkDataShaHashesEFeatureLevelStoresPrerequisiteIdsEFeatureLevelStoredAsBinaryDataEFeatureLevelVariableSizeChunksWithoutWindowSizeChunkInfoEFeatureLevelVariableSizeChunksEFeatureLevelStoresUniqueBuildIdEFeatureLevelLatestPlusOne"

var _EFeatureLevel_index = [...]uint16{0, 21, 46, 78, 106, 142, 177, 213, 249, 282, 319, 340, 361, 398, 432, 463, 520, 551, 583, 609}

func (i EFeatureLevel) String() string {
	if i < 0 || i >= EFeatureLevel(len(_EFeatureLevel_index)-1) {
		return "EFeatureLevel(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _EFeatureLevel_name[_EFeatureLevel_index[i]:_EFeatureLevel_index[i+1]]
}
